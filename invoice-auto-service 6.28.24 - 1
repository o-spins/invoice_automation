import tkinter as tk
from tkinter import filedialog
import pdfplumber
import csv

class ServiceInvoiceCoords:
    def __init__(self, pdf, page, page_num, section):
        self.pdf = pdf
        self.page = page
        self.page_num = page_num
        self.section = section

    def job(self, pdf, page_num):
        job_coord = (176, 269, 285, 286)
        job_extract = self.extract(pdf.pages[page_num], job_coord)

        return job_extract
    
    def date(self, pdf, page_num):
        date_coord = (502, 270, 543, 287)
        date_extract = self.extract(pdf.pages[page_num], date_coord)

        return date_extract
    
    def inv_num(self, pdf, page_num):
        inv_coord = (356, 48, 403, 58)
        inv_extract = self.extract(pdf.pages[page_num], inv_coord)

        return inv_extract
    
    def total(self, pdf, page_num):
        total_coord = (419, 46, 476, 59)
        total_extract = self.extract(pdf.pages[page_num], total_coord)

        return total_extract


class InvoiceAnalyzer:
    def __init__(self, win):
        self.win = win
        self.win.title("RG & Son's Plumbing Invoice Analyzer")
        self.win.geometry("600x900")

        self.create_widgets()
    
    def create_widgets(self):
        self.load_button = tk.Button(self.win, text = "Import Invoices", command = self.load_button)
        self.load_button.pack(pady = 10)

        self.export_button = tk.Button(self.win, text = "Export to CSV", command = self.export_data)
        self.export_button.pack(pady = 10)
    
    def load_button(self):
        pdf = filedialog.askopenfilename(title = "Select a file", filetypes = [("PDF Files", "*.pdf")])

        if pdf:
            with pdfplumber.open(pdf) as file:
                self.anaylze_pdf(file)

    def export_data(self):
        pass
    
    def inv_data(self, pdf, page_num):
        num = ServiceInvoiceCoords.job(self, pdf, page_num)
        date = ServiceInvoiceCoords.date(self, pdf, page_num)
        inv_num = ServiceInvoiceCoords.inv_num(self, pdf, page_num)
        total = ServiceInvoiceCoords.total(self, pdf, page_num)

        return [num, inv_num, total, date]
    
    def anaylze_pdf(self, pdf):
        info = ""

        for page in range(len(pdf.pages)):
            info += f"Invoice data on page {page + 1}\n"

            data = self.inv_data(pdf, page)
            check = self.service_indirect_filter(data)

            info += f"Order Number:    {data[0]}\n"
            info += f"Invoice Number:  {data[1]}\n"
            info += f"Total Due:       {data[2]}\n"
            info += f"Date:            {data[3]}\n"

            info += f"Invoice type:    {check}\n"

        print(info) 
    
    def extract(self, page, section):
        piece = page.crop(section)
        text = piece.extract_text()
        
        return text
    
    def export_csv(self):
        pass

    def service_indirect_filter(self, data):
        initials = ["KO", "TP", "RT", "IP", "GM"]
        check = data[0]

        first_two_letters = check[:2]

        if first_two_letters in initials or check.isnumeric() and len(check) == 8:
            return "Service" + "\n"
        else:
            return "Indirect" + "\n"


if __name__ == "__main__":
    root = tk.Tk()
    app = InvoiceAnalyzer(root)

    root.mainloop()
